import maya.cmds as mc
import pymel.core as pm
from functools import wraps

import adb_core.NameConv_utils as NC

# -----------------------------------
#  DECORATORS
# -----------------------------------

def undo(func):
    """ Puts the wrapped `func` into a single Maya Undo action, then
        undoes it when the function enters the finally: block
        from schworer Github """
    @wraps(func)
    def _undofunc(*args, **kwargs):
        try:
            # start an undo chunk
            mc.undoInfo(ock=True)
            return func(*args, **kwargs)
        finally:
            # after calling the func, end the undo chunk
            mc.undoInfo(cck=True)
    return _undofunc


# ----------------------------------------------------------------------

def changeColor(col=(0.8, 0.5, 0.2)):
    """ Puts the wrapped `func` into a Nurbs.
        Sets the override color to a RGB value

        :param: col : RGB values,
        :type col: tuple
    """
    def real_decorator(func):
        def _changeColorfunc(*args, **kwargs):
            f = func(*args, **kwargs)
            pm.select(f)

            ctrls = pm.selected()

            shapes = [x.getShapes() for x in ctrls]
            all_shapes = [x for i in shapes for x in i]

            for ctrl in all_shapes:
                pm.PyNode(ctrl).overrideEnabled.set(1)
                pm.PyNode(ctrl).overrideRGBColors.set(1)
                pm.PyNode(ctrl).overrideColorRGB.set(col)

            return f
        return _changeColorfunc
    return real_decorator


# -----------------------------------
#  FUNCTIONS
# -----------------------------------


"""
=========================== shape building ===========================

"""


@undo
def Xarrow_shape():
    _ctrl = pm.curve(p=[[-0.7403, 0.0000, 0.0000], [-0.7403, 0.0000, 1.4807], [0.7403, 0.0000, 1.4807], [0.7403, 0.0000, 0.0000], [1.4807, 0.0000, 0.0000], [0.0000, 0.0000, -1.4807], [-1.4807, 0.0000, 0.0000], [-0.7403, 0.0000, 0.0000]],
                     d=1,
                     k=[0, 1, 2, 3, 4, 5, 6, 7],
                     n="Xarrow_shape",
                     )
    return _ctrl


@undo
def Yarrow_shape():
    _ctrl = pm.curve(p=[[-0.0000, -0.7287, 0.0000], [-0.0000, -0.7287, 1.4575], [0.0000, 0.7287, 1.4575], [0.0000, 0.7287, 0.0000], [0.0000, 1.4575, 0.0000], [0.0000, 0.0000, -1.4575], [-0.0000, -1.4575, 0.0000], [-0.0000, -0.7287, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0],
                     d=1,
                     n="Yarrow_shape",
                     )
    return _ctrl


@undo
def Zarrow_shape():
    _ctrl = pm.curve(p=[[-0.0000, 0.0000, -0.7437], [-1.4874, 0.0000, -0.7437], [-1.4874, 0.0000, 0.7437], [0.0000, 0.0000, 0.7437], [0.0000, 0.0000, 1.4874], [1.4874, 0.0000, -0.0000], [-0.0000, 0.0000, -1.4874], [-0.0000, 0.0000, -0.7437]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0],
                     d=1,
                     n="Zarrow_shape",
                     )
    return _ctrl


@undo
def main_shape():
    _ctrl = pm.curve(p=[[0.0002, 0.0001, -3.6651], [0.8119, 0.0001, -2.8585], [0.4098, 0.0001, -2.8584], [0.4097, 0.0001, -2.3697], [0.7795, 0.0001, -2.2692], [1.1494, 0.0001, -2.1118], [1.4598, 0.0001, -1.9041],
                        [1.6761, 0.0001, -1.7039], [1.9041, 0.0001, -1.4598], [2.1118, 0.0001, -1.1494], [2.2692, 0.0001, -0.7795], [2.3697, 0.0001, -0.4097], [2.8584, 0.0001, - 0.4098], [2.8585, 0.0001, -0.8119],
                        [3.6651, 0.0001, -0.0002], [2.8585, 0.0001, 0.8119], [2.8584, 0.0001, 0.4098], [2.3697, 0.0001, 0.4097], [2.2692, 0.0001, 0.7795], [2.1118, 0.0001, 1.1494], [1.9041, 0.0001, 1.4598], [1.7039, 0.0001, 1.6761],
                        [1.4598, 0.0001, 1.9041], [1.1494, 0.0001, 2.1118], [0.7795, 0.0001, 2.2692], [0.4097, 0.0001, 2.3697], [0.4098, 0.0001, 2.8584], [0.8119, 0.0001, 2.8585], [-0.0002, 0.0001, 3.6651], [-0.8119, 0.0001, 2.8585],
                        [-0.4098, 0.0001, 2.8584], [-0.4097, 0.0001, 2.3697], [-0.7795, 0.0001, 2.2692], [-1.1494, 0.0001, 2.1118], [-1.4598, 0.0001, 1.9041], [-1.6761, 0.0001, 1.7039], [-1.9041, 0.0001, 1.4598], [-2.1118, 0.0001, 1.1494],
                        [-2.2692, 0.0001, 0.7795], [-2.3697, 0.0001, 0.4097], [-2.8584, 0.0001, 0.4098], [-2.8585, 0.0001, 0.8119], [-3.6651, 0.0001, 0.0002], [-2.8585, 0.0001, -0.8119], [-2.8584, 0.0001, -0.4098], [-2.3697, 0.0001, -0.4097],
                        [-2.2692, 0.0001, -0.7795], [-2.1118, 0.0001, -1.1494], [-1.9041, 0.0001, -1.4598], [-1.7039, 0.0001, -1.6761], [-1.4598, 0.0001, -1.9041], [-1.1494, 0.0001, -2.1118], [-0.7795, 0.0001, -2.2692], [-0.4097, 0.0001, -2.3697],
                        [-0.4098, 0.0001, -2.8584], [-0.8119, 0.0001, -2.8585], [-0.0002, 0.0001, -3.6651]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0,
                        29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0],
                     d=1,
                     n="main_ctrl",
                     )
    return _ctrl


@undo
def cube_shape():
    _ctrl = pm.curve(p=[[-1.5090, 1.5090, 1.5090], [1.5090, 1.5090, 1.5090], [1.5090, 1.5090, -1.5090], [-1.5090, 1.5090, -1.5090], [-1.5090, 1.5090, 1.5090], [-1.5090, -1.5090, 1.5090], [-1.5090, -1.5090, -1.5090], [1.5090, -1.5090, -1.5090], [1.5090, -1.5090, 1.5090], [-1.5090, -1.5090, 1.5090], [1.5090, -1.5090, 1.5090], [1.5090, 1.5090, 1.5090], [1.5090, 1.5090, -1.5090], [1.5090, -1.5090, -1.5090], [-1.5090, -1.5090, -1.5090], [-1.5090, 1.5090, -1.5090]],
                     d=1,
                     n="cube_ctrl",
                     )
    return _ctrl


@undo
def rectangle_shape():
    _ctrl = pm.curve(p=[[-1.4935, 0.1253, 1.4935], [1.4935, 0.1253, 1.4935], [1.4935, 0.1253, -1.4935], [-1.4935, 0.1253, -1.4935], [-1.4935, 0.1253, 1.4935], [-1.4935, -0.1253, 1.4935], [-1.4935, -0.1253, -1.4935], [1.4935, -0.1253, -1.4935], [1.4935, -0.1253, 1.4935], [-1.4935, -0.1253, 1.4935], [1.4935, -0.1253, 1.4935], [1.4935, 0.1253, 1.4935], [1.4935, 0.1253, -1.4935], [1.4935, -0.1253, -1.4935], [-1.4935, -0.1253, -1.4935], [-1.4935, 0.1253, -1.4935]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0],
                     d=1, n="rectangle_ctrl")
    return _ctrl


@undo
def circleY_shape():
    _ctrl = pm.circle(n="circle_ctrl", c=(0, 0, 0), ch=1, d=3, ut=0, sw=360, s=8, r=1.5, tol=0.01, nr=(0, 1, 0))
    return _ctrl[0]


@undo
def circleX_shape():
    _ctrl = pm.circle(n="circle_ctrl", c=(0, 0, 0), ch=1, d=3, ut=0, sw=360, s=8, r=1.5, tol=0.01, nr=(1, 0, 0))
    return _ctrl[0]


@undo
def circleZ_shape():
    _ctrl = pm.circle(n="circle_ctrl", c=(0, 0, 0), ch=1, d=3, ut=0, sw=360, s=8, r=1.5, tol=0.01, nr=(0, 0, 1))
    return _ctrl[0]


@undo
def ball_shape():
    _ctrl = pm.curve(p=[[-1.4720, 0.0000, 0.0000], [-1.4001, 0.0000, -0.4550], [-1.1908, 0.0000, -0.8652], [-0.8652, 0.0000, -1.1908], [-0.4550, 0.0000, -1.4001], [0.0000, 0.0000, -1.4720], [0.0000, 0.7359, -1.2748], [0.0000, 1.2748, -0.7359], [0.0000, 1.4720, 0.0000], [0.0000, 1.2748, 0.7359], [0.0000, 0.7359, 1.2748], [0.0000, 0.0000, 1.4720], [0.0000, -0.7359, 1.2748], [0.0000, -1.2748, 0.7359], [0.0000, -1.4720, 0.0000], [0.0000, -1.2748, -0.7359],
                        [0.0000, -0.7359, -1.2748], [0.0000, 0.0000, -1.4720], [0.4550, 0.0000, -1.4001], [0.8652, 0.0000, -1.1908], [1.1908, 0.0000, -0.8652], [1.4001, 0.0000, -0.4550], [1.4720, 0.0000, 0.0000], [1.4001, 0.0000, 0.4550], [1.1908, 0.0000, 0.8652], [0.8652, 0.0000, 1.1908], [0.4550, 0.0000, 1.4001], [0.0000, 0.0000, 1.4720], [-0.4550, 0.0000, 1.4001], [-0.8652, 0.0000, 1.1908], [-1.1908, 0.0000, 0.8652], [-1.4001, 0.0000, 0.4550], [-1.4720, 0.0000, 0.0000],
                        [-1.4001, 0.4550, 0.0000], [-1.1908, 0.8652, 0.0000], [-0.8652, 1.1908, 0.0000], [-0.4550, 1.4001, 0.0000], [0.0000, 1.4720, 0.0000], [0.4550, 1.4001, 0.0000], [0.8652, 1.1908, 0.0000], [1.1908, 0.8652, 0.0000], [1.4001, 0.4550, 0.0000], [1.4720, 0.0000, 0.0000], [1.4001, -0.4550, 0.0000], [1.1908, -0.8652, 0.0000], [0.8652, -1.1908, 0.0000], [0.4550, -1.4001, 0.0000], [0.0000, -1.4720, 0.0000], [-0.4550, -1.4001, 0.0000], [-0.8652, -1.1908, 0.0000], [-1.1908, -0.8652, 0.0000], [-1.4001, -0.4550, 0.0000], [-1.4720, 0.0000, 0.0000]],

                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0,
                         27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0],
                     d=1,
                     n="ball_ctrl",
                     )
    return _ctrl


@undo
def diamond_shape():
    _ctrl = pm.curve(p=[[-0.0018, 1.4502, 0.0000], [-0.0018, 0.0000, 1.4502], [-0.0018, -1.4502, 0.0000], [-0.0018, 0.0000, -1.4502], [-0.0018, 1.4502, 0.0000], [-1.4520, 0.0000, 0.0000], [-0.0018, -1.4502, 0.0000], [1.4484, 0.0000, 0.0000], [-0.0018, 1.4502, 0.0000], [-1.4520, 0.0000, 0.0000], [-0.0018, 0.0000, 1.4502], [1.4484, 0.0000, 0.0000], [-0.0018, 0.0000, -1.4502], [-1.4520, 0.0000, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0],
                     d=1,
                     n="diamond_ctrl",
                     )
    pm.xform(_ctrl, cp=1)
    return _ctrl


@undo
def fleches_shape():
    _ctrl = pm.curve(p=[[0.0000, 0.2109, -1.4630], [-0.4917, 0.6898, -1.0972], [-0.1402, 0.6898, -1.0972], [-0.1402, 0.9419, -0.7315], [-0.1402, 1.0931, -0.1443], [-0.7315, 0.9419, -0.1443], [-1.0972, 0.6898, -0.1443], [-1.0972, 0.6898, -0.4917], [-1.4630, 0.2109, 0.0000], [-1.0972, 0.6898, 0.4917], [-1.0972, 0.6898, 0.1443], [-0.7315, 0.9419, 0.1443], [-0.1402, 1.0931, 0.1443], [-0.1402, 0.9419, 0.7315], [-0.1402, 0.6898, 1.0972], [-0.4917, 0.6898, 1.0972], [0.0000, 0.2109, 1.4630], [0.4917, 0.6898, 1.0972], [0.1402, 0.6898, 1.0972], [0.1402, 0.9419, 0.7315], [0.1402, 1.0931, 0.1443], [0.7315, 0.9419, 0.1443], [1.0972, 0.6898, 0.1443], [1.0972, 0.6898, 0.4917], [1.4630, 0.2109, 0.0000], [1.0972, 0.6898, -0.4917], [1.0972, 0.6898, -0.1443], [0.7315, 0.9419, -0.1443], [0.1402, 1.0931, -0.1443], [0.1402, 0.9419, -0.7315], [0.1402, 0.6898, -1.0972], [0.4917, 0.6898, -1.0972], [0.0000, 0.2109, -1.4630]],
                     k=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
                     d=1,
                     n="fleche_ctrl"
                     )
    return _ctrl


@undo
def double_fleches_shape():
    _ctrl = pm.curve(p=[[-0.8572, -0.0000, -0.2951], [0.8572, -0.0000, -0.2951], [0.8572, -0.0000, -0.5285], [1.4558, -0.0000, 0.0000], [0.8572, -0.0000, 0.5285], [0.8572, -0.0000, 0.2951], [-0.8572, -0.0000, 0.2951], [-0.8572, -0.0000, 0.5285], [-1.4558, -0.0000, 0.0000], [-0.8572, -0.0000, -0.5285], [-0.8572, -0.0000, -0.2951]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
                     d=1,
                     n="double_fleches_ctrl"
                     )
    return _ctrl


@undo
def arc_fleches_shape():
    _ctrl = pm.curve(p=[[0.0000, 0.6878, 0.3583], [-0.2743, 0.6643, 0.3583], [-0.5407, 0.5946, 0.3583], [-0.7914, 0.4807, 0.3583], [-1.0190, 0.3258, 0.3583], [-1.0190, 0.3258, 0.6847], [-1.1521, 0.2046, 0.5188], [-1.2849, 0.0513, 0.3317], [-1.3975, -0.1175, 0.1447], [-1.4695, -0.2570, 0.0000], [-1.4011, -0.1238, -0.1380], [-1.2883, 0.0468, -0.3266], [-1.1549, 0.2018, -0.5151], [-1.0190, 0.3258, -0.6847], [-1.0190, 0.3258, -0.3583], [-0.7914, 0.4807, -0.3583], [-0.5407, 0.5946, -0.3583], [-0.2743, 0.6643, -0.3583], [0.0000, 0.6878, -0.3583], [0.2743, 0.6643, -0.3583], [0.5407, 0.5946, -0.3583], [0.7914, 0.4807, -0.3583], [1.0190, 0.3258, -0.3583], [1.0190, 0.3258, -0.6847], [1.1549, 0.2018, -0.5151], [1.2883, 0.0468, -0.3266], [1.4011, -0.1238, -0.1380], [1.4695, -0.2570, 0.0000], [1.3975, -0.1175, 0.1447], [1.2849, 0.0513, 0.3317], [1.1521, 0.2046, 0.5188], [1.0190, 0.3258, 0.6847], [1.0190, 0.3258, 0.3583], [0.7914, 0.4807, 0.3583], [0.5407, 0.5946, 0.3583], [0.2743, 0.6643, 0.3583], [0.0000, 0.6878, 0.3583]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0,
                         19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0],
                     d=1, n="arc_fleches_ctrl",
                     )
    return _ctrl


@undo
def halfSpherePin_shape():
    _ctrl = pm.curve(p= [[0.0000, 2.8973, -0.3386], [-0.0442, 2.8973, -0.3357], [-0.0876, 2.8973, -0.3271], [-0.1296, 2.8973, -0.3129], [-0.1694, 2.8973, -0.2932], [-0.2061, 2.8973, -0.2686], [-0.2394, 2.8973, -0.2394], [-0.2686, 2.8973, -0.2061], [-0.2932, 2.8973, -0.1694], [-0.3129, 2.8973, -0.1296], [-0.3271, 2.8973, -0.0876], [-0.3357, 2.8973, -0.0442], [-0.3386, 2.8973, 0.0000], [-0.3357, 2.8973, 0.0442], [-0.3271, 2.8973, 0.0876], [-0.3129, 2.8973, 0.1296], [-0.2932, 2.8973, 0.1694], [-0.2686, 2.8973, 0.2061], [-0.2394, 2.8973, 0.2394], [-0.2061, 2.8973, 0.2686], [-0.1694, 2.8973, 0.2932], [-0.1296, 2.8973, 0.3129], [-0.0876, 2.8973, 0.3271], [-0.0442, 2.8973, 0.3357], [0.0000, 2.8973, 0.3386], [0.0442, 2.8973, 0.3357], [0.0876, 2.8973, 0.3271], [0.1296, 2.8973, 0.3129], [0.1694, 2.8973, 0.2932], [0.2061, 2.8973, 0.2686], [0.2394, 2.8973, 0.2394], [0.2686, 2.8973, 0.2061], [0.2932, 2.8973, 0.1694], [0.3129, 2.8973, 0.1296], [0.3271, 2.8973, 0.0876], [0.3357, 2.8973, 0.0442], [0.3386, 2.8973, 0.0000], [0.3357, 2.8973, -0.0442], [0.3271, 2.8973, -0.0876], [0.3129, 2.8973, -0.1296], [0.2932, 2.8973, -0.1694], [0.2686, 2.8973, -0.2061], [0.2394, 2.8973, -0.2394], [0.2061, 2.8973, -0.2686], [0.1694, 2.8973, -0.2932], [0.1296, 2.8973, -0.3129], [0.0876, 2.8973, -0.3271], [0.0442, 2.8973, -0.3357], [0.0000, 2.8973, -0.3386], [0.0000, 2.8973, -0.3633], [0.0474, 2.8973, -0.3603], [0.0941, 2.8973, -0.3510],
                        [0.1391, 2.8973, -0.3357], [0.1817, 2.8973, -0.3146], [0.2212, 2.8973, -0.2882], [0.2569, 2.8973, -0.2569], [0.2882, 2.8973, -0.2212], [0.3146, 2.8973, -0.1817], [0.3357, 2.8973, -0.1391], [0.3510, 2.8973, -0.0941], [0.3603, 2.8973, -0.0474], [0.3633, 2.8973, 0.0000], [0.3603, 2.8973, 0.0474], [0.3510, 2.8973, 0.0941], [0.3357, 2.8973, 0.1391], [0.3146, 2.8973, 0.1817], [0.2882, 2.8973, 0.2212], [0.2569, 2.8973, 0.2569], [0.2212, 2.8973, 0.2882], [0.1817, 2.8973, 0.3146], [0.1391, 2.8973, 0.3357], [0.0941, 2.8973, 0.3510], [0.0474, 2.8973, 0.3603], [0.0000, 2.8973, 0.3633], [-0.0474, 2.8973, 0.3603], [-0.0941, 2.8973, 0.3510], [-0.1391, 2.8973, 0.3357], [-0.1817, 2.8973, 0.3146], [-0.2212, 2.8973, 0.2882], [-0.2569, 2.8973, 0.2569], [-0.2882, 2.8973, 0.2212], [-0.3146, 2.8973, 0.1817], [-0.3357, 2.8973, 0.1391], [-0.3510, 2.8973, 0.0941], [-0.3603, 2.8973, 0.0474], [-0.3633, 2.8973, 0.0000], [-0.3603, 2.8973, -0.0474], [-0.3510, 2.8973, -0.0941], [-0.3357, 2.8973, -0.1391], [-0.3146, 2.8973, -0.1817], [-0.2882, 2.8973, -0.2212], [-0.2569, 2.8973, -0.2569], [-0.2212, 2.8973, -0.2882], [-0.1817, 2.8973, -0.3146], [-0.1391, 2.8973, -0.3357], [-0.0941, 2.8973, -0.3510], [-0.0474, 2.8973, -0.3603], [0.0000, 2.8973, -0.3633], [0.0000, 2.8973, -0.4075], [0.0000, 2.8973, 0.0000], [0.0000, 2.8973, 0.4075], [0.0000, 2.8973, 0.0000], [0.4075, 2.8973, 0.0000], [0.0000, 2.8973, 0.0000], [-0.4075, 2.8973, 0.0000], [0.0000, 2.8973, 0.0000], [0.0000, 0.0302, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0,
                        55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0],
                     d=1,
                     n="HalfSpherePin__CTRL",
                     )
    return _ctrl


@undo
def pinX_shape():
    _ctrl = pm.curve(p=[[2.2364, 0.0000, -0.0000], [2.3418, 0.2546, -0.0000], [2.5964, 0.3600, -0.0000], [2.8510, 0.2546, -0.0000], [2.9564, 0.0000, -0.0000], [2.8510, -0.2546, -0.0000], [2.5964, -0.3600, -0.0000], [2.3418, -0.2546, -0.0000], [2.2364, 0.0000, -0.0000], [2.2638, 0.0000, 0.1378], [2.3418, 0.0000, 0.2546], [2.4586, 0.0000, 0.3326], [2.5964, 0.0000, 0.3600], [2.7342, 0.0000, 0.3326], [2.8510, 0.0000, 0.2546], [2.9290, 0.0000, 0.1378], [2.9564, 0.0000, -0.0000], [2.9290, 0.0000, -0.1378], [2.8510, 0.0000, -0.2546], [2.7342, 0.0000, -0.3326], [2.5964, 0.0000, -0.3600], [2.4586, 0.0000, -0.3326], [2.3418, 0.0000, -0.2546], [2.2638, 0.0000, -0.1378], [2.2364, 0.0000, -0.0000], [0.0504, 0.0000, -0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0],
                     d=1,
                     n="Pin__CTRL")
    return _ctrl


@undo
def pinY_shape():
    _ctrl = pm.curve(p=[[0.0000, 2.2364, 0.0000], [0.0000, 2.3418, -0.2546], [0.0000, 2.5964, -0.3600], [0.0000, 2.8510, -0.2546], [0.0000, 2.9564, 0.0000], [0.0000, 2.8510, 0.2546], [0.0000, 2.5964, 0.3600], [0.0000, 2.3418, 0.2546], [0.0000, 2.2364, 0.0000], [-0.1378, 2.2638, 0.0000], [-0.2546, 2.3418, 0.0000], [-0.3326, 2.4586, 0.0000], [-0.3600, 2.5964, 0.0000], [-0.3326, 2.7342, 0.0000], [-0.2546, 2.8510, 0.0000], [-0.1378, 2.9290, 0.0000], [0.0000, 2.9564, 0.0000], [0.1378, 2.9290, 0.0000], [0.2546, 2.8510, 0.0000], [0.3326, 2.7342, 0.0000], [0.3600, 2.5964, 0.0000], [0.3326, 2.4586, 0.0000], [0.2546, 2.3418, 0.0000], [0.1378, 2.2638, 0.0000], [0.0000, 2.2364, 0.0000], [0.0000, 0.0504, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0],
                     d=1,
                     n="Pin__CTRL")
    return _ctrl


@undo
def pinZ_shape():
    _ctrl = pm.curve(p=[[0.0000, 0.0000, 2.2364], [0.2546, 0.0000, 2.3418], [0.3600, 0.0000, 2.5964], [0.2546, 0.0000, 2.8510], [0.0000, 0.0000, 2.9564], [-0.2546, 0.0000, 2.8510], [-0.3600, 0.0000, 2.5964], [-0.2546, 0.0000, 2.3418], [0.0000, 0.0000, 2.2364], [0.0000, 0.1378, 2.2638], [0.0000, 0.2546, 2.3418], [0.0000, 0.3326, 2.4586], [0.0000, 0.3600, 2.5964], [0.0000, 0.3326, 2.7342], [0.0000, 0.2546, 2.8510], [0.0000, 0.1378, 2.9290], [0.0000, 0.0000, 2.9564], [0.0000, -0.1378, 2.9290], [0.0000, -0.2546, 2.8510], [0.0000, -0.3326, 2.7342], [0.0000, -0.3600, 2.5964], [0.0000, -0.3326, 2.4586], [0.0000, -0.2546, 2.3418], [0.0000, -0.1378, 2.2638], [0.0000, 0.0000, 2.2364], [0.0000, 0.0000, 0.0504]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0],
                     d=1,
                     n="Pin__CTRL")
    return _ctrl


def double_pin_shape():
    _ctrl = pm.curve(p=[[0.0000, 0.0000, -1.0062], [-0.1703, 0.0000, -1.0767], [-0.2408, 0.0000, -1.2470], [-0.1703, 0.0000, -1.4172], [0.0000, 0.0000, -1.4877], [0.1703, 0.0000, -1.4172], [0.2408, 0.0000, -1.2470], [0.1703, 0.0000, -1.0767], [0.0000, 0.0000, -1.0062], [0.0000, 0.0922, -1.0246], [0.0000, 0.1703, -1.0767], [0.0000, 0.2224, -1.1548], [0.0000, 0.2408, -1.2470], [0.0000, 0.2224, -1.3391], [0.0000, 0.1703, -1.4172], [0.0000, 0.0922, -1.4694], [0.0000, 0.0000, -1.4877], [0.0000, -0.0922, -1.4694], [0.0000, -0.1703, -1.4172], [0.0000, -0.2224, -1.3391], [0.0000, -0.2408, -1.2470], [0.0000, -0.2224, -1.1548], [0.0000, -0.1703, -1.0767], [0.0000, -0.0922, -1.0246], [0.0000, 0.0000, -1.0062], [0.0000, 0.0000, -0.0001], [0.0000, 0.0000, 1.0058], [0.1703, 0.0000, 1.0763], [0.2408, 0.0000, 1.2466], [0.1703, 0.0000, 1.4168], [0.0000, 0.0000, 1.4873], [-0.1703, 0.0000, 1.4168], [-0.2408, 0.0000, 1.2466], [-0.1703, 0.0000, 1.0763], [0.0000, 0.0000, 1.0058], [0.0000, -0.0922, 1.0242], [0.0000, -0.1703, 1.0763], [0.0000, -0.2224, 1.1544], [0.0000, -0.2408, 1.2466], [0.0000, -0.2224, 1.3387], [0.0000, -0.1703, 1.4168], [0.0000, -0.0922, 1.4690], [0.0000, 0.0000, 1.4873], [0.0000, 0.0922, 1.4690], [0.0000, 0.1703, 1.4168], [0.0000, 0.2224, 1.3387], [0.0000, 0.2408, 1.2466], [0.0000, 0.2224, 1.1544], [0.0000, 0.1703, 1.0763], [0.0000, 0.0922, 1.0242], [0.0000, 0.0000, 1.0058]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0,
                         26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0],
                     d=1,
                     n="DoublePin__CTRL",
                     )
    return _ctrl


@undo
def circleCross_shape():
    _ctrl = pm.curve(p=[[0.0000, 0.0000, -1.2218], [-0.1594, 0.0000, -1.2113], [-0.3162, 0.0000, -1.1801], [-0.4675, 0.0000, -1.1287], [-0.6109, 0.0000, -1.0581], [-0.7437, 0.0000, -0.9693], [-0.8639, 0.0000, -0.8639], [-0.9693, 0.0000, -0.7437], [-1.0581, 0.0000, -0.6109], [-1.1287, 0.0000, -0.4675], [-1.1801, 0.0000, -0.3162], [-1.2113, 0.0000, -0.1594], [-1.2218, 0.0000, 0.0000], [-1.2113, 0.0000, 0.1594], [-1.1801, 0.0000, 0.3162], [-1.1287, 0.0000, 0.4675], [-1.0581, 0.0000, 0.6109], [-0.9693, 0.0000, 0.7437], [-0.8639, 0.0000, 0.8639], [-0.7437, 0.0000, 0.9693], [-0.6109, 0.0000, 1.0581], [-0.4675, 0.0000, 1.1287], [-0.3162, 0.0000, 1.1801], [-0.1594, 0.0000, 1.2113], [0.0000, 0.0000, 1.2218], [0.1594, 0.0000, 1.2113], [0.3162, 0.0000, 1.1801], [0.4675, 0.0000, 1.1287], [0.6109, 0.0000, 1.0581], [0.7437, 0.0000, 0.9693], [0.8639, 0.0000, 0.8639], [0.9693, 0.0000, 0.7437], [1.0581, 0.0000, 0.6109], [1.1287, 0.0000, 0.4675], [1.1801, 0.0000, 0.3162], [1.2113, 0.0000, 0.1594], [1.2218, 0.0000, 0.0000], [1.2113, 0.0000, -0.1594], [1.1801, 0.0000, -0.3162], [1.1287, 0.0000, -0.4675], [1.0581, 0.0000, -0.6109], [0.9693, 0.0000, -0.7437], [0.8639, 0.0000, -0.8639], [0.7437, 0.0000, -0.9693], [0.6109, 0.0000, -1.0581], [0.4675, 0.0000, -1.1287], [0.3162, 0.0000, -1.1801], [0.1594, 0.0000, -1.2113], [0.0000, 0.0000, -1.2218], [0.0000, 0.0000, -1.3109], [0.1711, 0.0000, -1.2997], [0.3393, 0.0000, -1.2662], [0.5017, 0.0000, -1.2112], [0.6555, 0.0000, -1.1353], [0.7981, 0.0000, -1.0401], [0.9270, 0.0000, -0.9270], [1.0401, 0.0000, -0.7981], [1.1353, 0.0000, -0.6555], [1.2112, 0.0000, -0.5017], [1.2662, 0.0000, -0.3393], [1.2997, 0.0000, -0.1711], [1.3109, 0.0000, 0.0000], [1.2997, 0.0000, 0.1711], [1.2662, 0.0000, 0.3393], [1.2112, 0.0000, 0.5017], [1.1353, 0.0000, 0.6555], [1.0401, 0.0000, 0.7981], [0.9270, 0.0000, 0.9270], [0.7981, 0.0000, 1.0401], [0.6555, 0.0000, 1.1353], [0.5017, 0.0000, 1.2112], [0.3393, 0.0000, 1.2662], [0.1711, 0.0000, 1.2997], [0.0000, 0.0000, 1.3109], [-0.1711, 0.0000, 1.2997], [-0.3393, 0.0000, 1.2662], [-0.5017, 0.0000, 1.2112], [-0.6555, 0.0000, 1.1353], [-0.7981, 0.0000, 1.0401], [-0.9270, 0.0000, 0.9270], [-1.0401, 0.0000, 0.7981], [-1.1353, 0.0000, 0.6555], [-1.2112, 0.0000, 0.5017], [-1.2662, 0.0000, 0.3393], [-1.2997, 0.0000, 0.1711], [-1.3109, 0.0000, 0.0000], [-1.2997, 0.0000, -0.1711], [-1.2662, 0.0000, -0.3393], [-1.2112, 0.0000, -0.5017], [-1.1353, 0.0000, -0.6555], [-1.0401, 0.0000, -0.7981], [-0.9270, 0.0000, -0.9270], [-0.7981, 0.0000, -1.0401], [-0.6555, 0.0000, -1.1353], [-0.5017, 0.0000, -1.2112], [-0.3393, 0.0000, -1.2662], [-0.1711, 0.0000, -1.2997], [0.0000, 0.0000, -1.3109], [0.0000, 0.0000, -1.4701], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, 1.4701],
                        [0.0000, 0.0000, 0.0000], [1.4701, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000], [-1.4701, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0,
                         54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0],
                     d=1,
                     n="circleCross_ctrl",
                     )
    return _ctrl


@undo
def ball2_shape():
    _ctrl = pm.curve(p=[[0.0000, 0.0000, 1.3175], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, -1.3175], [0.0000, 0.0000, 0.0000], [1.3175, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000], [-1.3175, 0.0000, 0.0000], [-1.3062, 0.0000, -0.1719], [-1.2726, 0.0000, -0.3410], [-1.2172, 0.0000, -0.5042], [-1.1410, 0.0000, -0.6588], [-1.0453, 0.0000, -0.8021], [-0.9316, 0.0000, -0.9316], [-0.8021, 0.0000, -1.0453], [-0.6588, 0.0000, -1.1410], [-0.5042, 0.0000, -1.2172], [-0.3410, 0.0000, -1.2726], [-0.1719, 0.0000, -1.3062], [0.0000, 0.0000, -1.3175], [0.1719, 0.0000, -1.3062], [0.3410, 0.0000, -1.2726], [0.5042, 0.0000, -1.2172], [0.6588, 0.0000, -1.1410], [0.8021, 0.0000, -1.0453], [0.9316, 0.0000, -0.9316], [1.0453, 0.0000, -0.8021], [1.1410, 0.0000, -0.6588], [1.2172, 0.0000, -0.5042], [1.2726, 0.0000, -0.3410], [1.3062, 0.0000, -0.1719], [1.3175, 0.0000, 0.0000], [1.3062, 0.0000, 0.1719], [1.2726, 0.0000, 0.3410], [1.2172, 0.0000, 0.5042], [1.1410, 0.0000, 0.6588], [1.0453, 0.0000, 0.8021], [0.9316, 0.0000, 0.9316], [0.8021, 0.0000, 1.0453], [0.6588, 0.0000, 1.1410], [0.5042, 0.0000, 1.2172], [0.3410, 0.0000, 1.2726], [0.1719, 0.0000, 1.3062], [0.0000, 0.0000, 1.3175], [-0.1719, 0.0000, 1.3062], [-0.3410, 0.0000, 1.2726], [-0.5042, 0.0000, 1.2172], [-0.6588, 0.0000, 1.1410], [-0.8021, 0.0000, 1.0453], [-0.9316, 0.0000, 0.9316], [-1.0453, 0.0000, 0.8021], [-1.1410, 0.0000, 0.6588], [-1.2172, 0.0000, 0.5042], [-1.2726, 0.0000, 0.3410], [-1.3062, 0.0000, 0.1719], [-1.3175, 0.0000, 0.0000], [-1.3062, 0.0000, -0.1719], [-1.3962, 0.0000, -0.1838], [-1.3602, 0.0000, -0.3644], [-1.3010, 0.0000, -0.5389], [-1.2195, 0.0000, -0.7041], [-1.1172, 0.0000, -0.8573], [-0.9958, 0.0000, -0.9958], [-0.8573, 0.0000, -1.1172], [-0.7041, 0.0000, -1.2195], [-0.5389, 0.0000, -1.3010], [-0.3644, 0.0000, -1.3602], [-0.1838, 0.0000, -1.3962], [-0.1719, 0.0000, -1.3062], [0.0000, 0.0000, -1.3175], [0.1719, 0.0000, -1.3062], [0.1838, 0.0000, -1.3962], [0.3644, 0.0000, -1.3602], [0.5389, 0.0000, -1.3010], [0.7041, 0.0000, -1.2195], [0.8573, 0.0000, -1.1172], [0.9958, 0.0000, -0.9958], [1.1172, 0.0000, -0.8573], [1.2195, 0.0000, -0.7041], [1.3010, 0.0000, -0.5389],
                        [1.3602, 0.0000, -0.3644], [1.3962, 0.0000, -0.1838], [1.3062, 0.0000, -0.1719], [1.3175, 0.0000, 0.0000], [1.3062, 0.0000, 0.1719], [1.3962, 0.0000, 0.1838], [1.3602, 0.0000, 0.3644], [1.3010, 0.0000, 0.5389], [1.2195, 0.0000, 0.7041], [1.1172, 0.0000, 0.8573], [0.9958, 0.0000, 0.9958], [0.8573, 0.0000, 1.1172], [0.7041, 0.0000, 1.2195], [0.5389, 0.0000, 1.3010], [0.3644, 0.0000, 1.3602], [0.1838, 0.0000, 1.3962], [0.1719, 0.0000, 1.3062], [0.0000, 0.0000, 1.3175], [-0.1719, 0.0000, 1.3062], [-0.1838, 0.0000, 1.3962], [-0.3644, 0.0000, 1.3602], [-0.5389, 0.0000, 1.3010],
                        [-0.7041, 0.0000, 1.2195], [-0.8573, 0.0000, 1.1172], [-0.9958, 0.0000, 0.9958], [-1.1172, 0.0000, 0.8573], [-1.2195, 0.0000, 0.7041], [-1.3010, 0.0000, 0.5389], [-1.3602, 0.0000, 0.3644], [-1.3962, 0.0000, 0.1838], [-1.3062, 0.0000, 0.1719], [-1.3175, 0.0000, 0.0000], [-1.3062, 0.0000, -0.1719], [-1.3175, 0.0000, 0.0000], [-1.3062, 0.0000, 0.1719], [-1.3962, 0.0000, 0.1838], [-1.3602, 0.0000, 0.3644], [-1.3010, 0.0000, 0.5389], [-1.2195, 0.0000, 0.7041], [-1.1172, 0.0000, 0.8573], [-0.9958, 0.0000, 0.9958], [-0.8573, 0.0000, 1.1172], [-0.7041, 0.0000, 1.2195], [-0.5389, 0.0000, 1.3010], [-0.3644, 0.0000, 1.3602], [-0.1838, 0.0000, 1.3962], [-0.1719, 0.0000, 1.3062], [0.0000, 0.0000, 1.3175], [0.1719, 0.0000, 1.3062], [0.1838, 0.0000, 1.3962], [0.3644, 0.0000, 1.3602], [0.5389, 0.0000, 1.3010], [0.7041, 0.0000, 1.2195], [0.8573, 0.0000, 1.1172], [0.9958, 0.0000, 0.9958], [1.1172, 0.0000, 0.8573], [1.2195, 0.0000, 0.7041], [1.3010, 0.0000, 0.5389], [1.3602, 0.0000, 0.3644], [1.3962, 0.0000, 0.1838], [1.3062, 0.0000, 0.1719], [1.3175, 0.0000, 0.0000], [1.3062, 0.0000, -0.1719], [1.3962, 0.0000, -0.1838], [1.3602, 0.0000, -0.3644], [1.3010, 0.0000, -0.5389], [1.2195, 0.0000, -0.7041], [1.1172, 0.0000, -0.8573], [0.9958, 0.0000, -0.9958], [0.8573, 0.0000, -1.1172], [0.7041, 0.0000, -1.2195], [0.5389, 0.0000, -1.3010], [0.3644, 0.0000, -1.3602], [0.1838, 0.0000, -1.3962], [0.1719, 0.0000, -1.3062], [0.0000, 0.0000, -1.3175], [-0.1719, 0.0000, -1.3062], [-0.1838, 0.0000, -1.3962], [-0.3644, 0.0000, -1.3602], [-0.5389, 0.0000, -1.3010], [-0.7041, 0.0000, -1.2195], [-0.8573, 0.0000, -1.1172], [-0.9958, 0.0000, -0.9958], [-1.1172, 0.0000, -0.8573], [-1.2195, 0.0000, -0.7041], [-1.3010, 0.0000, -0.5389], [-1.3602, 0.0000, -0.3644], [-1.3962, 0.0000, -0.1838], [-1.3062, 0.0000, -0.1719], [-1.3175, 0.0000, 0.0000], [-1.3062, 0.0000, 0.1719], [-1.2726, 0.0000, 0.3410], [-1.2172, 0.0000, 0.5042], [-1.1410, 0.0000, 0.6588], [-1.0453, 0.0000, 0.8021], [-0.9316, 0.0000, 0.9316], [-0.8021, 0.0000, 1.0453], [-0.6588, 0.0000, 1.1410], [-0.5042, 0.0000, 1.2172], [-0.3410, 0.0000, 1.2726], [-0.1719, 0.0000, 1.3062],
                        [0.0000, 0.0000, 1.3175], [0.1719, 0.0000, 1.3062], [0.3410, 0.0000, 1.2726], [0.5042, 0.0000, 1.2172], [0.6588, 0.0000, 1.1410], [0.8021, 0.0000, 1.0453], [0.9316, 0.0000, 0.9316], [1.0453, 0.0000, 0.8021], [1.1410, 0.0000, 0.6588], [1.2172, 0.0000, 0.5042], [1.2726, 0.0000, 0.3410], [1.3062, 0.0000, 0.1719], [1.3175, 0.0000, 0.0000], [1.3062, 0.0000, -0.1719], [1.2726, 0.0000, -0.3410], [1.2172, 0.0000, -0.5042], [1.1410, 0.0000, -0.6588], [1.0453, 0.0000, -0.8021], [0.9316, 0.0000, -0.9316], [0.8021, 0.0000, -1.0453], [0.6588, 0.0000, -1.1410], [0.5042, 0.0000, -1.2172], [0.3410, 0.0000, -1.2726], [0.1719, 0.0000, -1.3062], [0.0000, 0.0000, -1.3175], [-0.1719, 0.0000, -1.3062], [-0.3410, 0.0000, -1.2726], [-0.5042, 0.0000, -1.2172], [-0.6588, 0.0000, -1.1410], [-0.8021, 0.0000, -1.0453], [-0.9316, 0.0000, -0.9316], [-1.0453, 0.0000, -0.8021], [-1.1410, 0.0000, -0.6588], [-1.2172, 0.0000, -0.5042], [-1.2726, 0.0000, -0.3410], [-1.3062, 0.0000, -0.1719], [-1.3175, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000], [1.3175, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, -1.3175], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, 1.3175], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, -1.3175], [0.0000, 0.0000, 0.0000], [0.0000, 1.3175, 0.0000], [0.0000, 0.0000, 0.0000], [0.0000, -1.3175, 0.0000], [0.0000, -1.3062, -0.1719], [0.0000, -1.2726, -0.3410], [0.0000, -1.2172, -0.5042], [0.0000, -1.1410, -0.6588], [0.0000, -1.0453, -0.8021], [0.0000, -0.9316, -0.9316], [0.0000, -0.8021, -1.0453], [0.0000, -0.6588, -1.1410], [0.0000, -0.5042, -1.2172], [0.0000, -0.3410, -1.2726], [0.0000, -0.1719, -1.3062], [0.0000, 0.0000, -1.3175], [0.0000, 0.1719, -1.3062], [0.0000, 0.3410, -1.2726], [0.0000, 0.5042, -1.2172], [0.0000, 0.6588, -1.1410], [0.0000, 0.8021, -1.0453], [0.0000, 0.9316, -0.9316], [0.0000, 1.0453, -0.8021], [0.0000, 1.1410, -0.6588], [0.0000, 1.2172, -0.5042], [0.0000, 1.2726, -0.3410], [0.0000, 1.3062, -0.1719], [0.0000, 1.3175, 0.0000], [0.0000, 1.3062, 0.1719], [0.0000, 1.2726, 0.3410], [0.0000, 1.2172, 0.5042], [0.0000, 1.1410, 0.6588], [0.0000, 1.0453, 0.8021], [0.0000, 0.9316, 0.9316], [0.0000, 0.8021, 1.0453],
                        [0.0000, 0.6588, 1.1410], [0.0000, 0.5042, 1.2172], [0.0000, 0.3410, 1.2726], [0.0000, 0.1719, 1.3062], [0.0000, 0.0000, 1.3175], [0.0000, -0.1719, 1.3062], [0.0000, -0.3410, 1.2726], [0.0000, -0.5042, 1.2172], [0.0000, -0.6588, 1.1410], [0.0000, -0.8021, 1.0453], [0.0000, -0.9316, 0.9316], [0.0000, -1.0453, 0.8021], [0.0000, -1.1410, 0.6588], [0.0000, -1.2172, 0.5042], [0.0000, -1.2726, 0.3410], [0.0000, -1.3062, 0.1719], [0.0000, -1.3175, 0.0000], [0.0000, -1.3062, -0.1719], [0.0000, -1.3962, -0.1838], [0.0000, -1.3602, -0.3644], [0.0000, -1.3010, -0.5389], [0.0000, -1.2195, -0.7041], [0.0000, -1.1172, -0.8573], [0.0000, -0.9958, -0.9958], [0.0000, -0.8573, -1.1172], [0.0000, -0.7041, -1.2195], [0.0000, -0.5389, -1.3010], [0.0000, -0.3644, -1.3602], [0.0000, -0.1838, -1.3962], [0.0000, -0.1719, -1.3062], [0.0000, 0.0000, -1.3175], [0.0000, 0.1719, -1.3062], [0.0000, 0.1838, -1.3962], [0.0000, 0.3644, -1.3602], [0.0000, 0.5389, -1.3010], [0.0000, 0.7041, -1.2195], [0.0000, 0.8573, -1.1172], [0.0000, 0.9958, -0.9958], [0.0000, 1.1172, -0.8573], [0.0000, 1.2195, -0.7041], [0.0000, 1.3010, -0.5389], [0.0000, 1.3602, -0.3644], [0.0000, 1.3962, -0.1838], [0.0000, 1.3062, -0.1719], [0.0000, 1.3175, 0.0000], [0.0000, 1.3062, 0.1719], [0.0000, 1.3962, 0.1838], [0.0000, 1.3602, 0.3644], [0.0000, 1.3010, 0.5389], [0.0000, 1.2195, 0.7041], [0.0000, 1.1172, 0.8573], [0.0000, 0.9958, 0.9958], [0.0000, 0.8573, 1.1172], [0.0000, 0.7041, 1.2195], [0.0000, 0.5389, 1.3010], [0.0000, 0.3644, 1.3602], [0.0000, 0.1838, 1.3962], [0.0000, 0.1719, 1.3062], [0.0000, 0.0000, 1.3175], [0.0000, -0.1719, 1.3062], [0.0000, -0.1838, 1.3962], [0.0000, -0.3644, 1.3602], [0.0000, -0.5389, 1.3010], [0.0000, -0.7041, 1.2195], [0.0000, -0.8573, 1.1172], [0.0000, -0.9958, 0.9958], [0.0000, -1.1172, 0.8573], [0.0000, -1.2195, 0.7041], [0.0000, -1.3010, 0.5389], [0.0000, -1.3602, 0.3644], [0.0000, -1.3962, 0.1838], [0.0000, -1.3062, 0.1719], [0.0000, -1.3175, 0.0000], [0.0000, 0.0000, 0.0000], [0.0000, 1.3175, 0.0000], [0.0000, 0.0000, 0.0000], [-1.3175, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000], [1.3175, 0.0000, 0.0000], [1.3062, 0.1719, 0.0000],
                        [1.2726, 0.3410, 0.0000], [1.2172, 0.5042, 0.0000], [1.1410, 0.6588, 0.0000], [1.0453, 0.8021, 0.0000], [0.9316, 0.9316, 0.0000], [0.8021, 1.0453, 0.0000], [0.6588, 1.1410, 0.0000], [0.5042, 1.2172, 0.0000], [0.3410, 1.2726, 0.0000], [0.1719, 1.3062, 0.0000], [0.0000, 1.3175, 0.0000], [-0.1719, 1.3062, 0.0000], [-0.3410, 1.2726, 0.0000], [-0.5042, 1.2172, 0.0000], [-0.6588, 1.1410, 0.0000], [-0.8021, 1.0453, 0.0000], [-0.9316, 0.9316, 0.0000], [-1.0453, 0.8021, 0.0000], [-1.1410, 0.6588, 0.0000], [-1.2172, 0.5042, 0.0000], [-1.2726, 0.3410, 0.0000], [-1.3062, 0.1719, 0.0000], [-1.3175, 0.0000, 0.0000], [-1.3062, -0.1719, 0.0000], [-1.2726, -0.3410, 0.0000],
                        [-1.2172, -0.5042, 0.0000], [-1.1410, -0.6588, 0.0000], [-1.0453, -0.8021, 0.0000], [-0.9316, -0.9316, 0.0000], [-0.8021, -1.0453, 0.0000], [-0.6588, -1.1410, 0.0000], [-0.5042, -1.2172, 0.0000], [-0.3410, -1.2726, 0.0000], [-0.1719, -1.3062, 0.0000], [0.0000, -1.3175, 0.0000], [0.1719, -1.3062, 0.0000], [0.3410, -1.2726, 0.0000], [0.5042, -1.2172, 0.0000], [0.6588, -1.1410, 0.0000], [0.8021, -1.0453, 0.0000], [0.9316, -0.9316, 0.0000], [1.0453, -0.8021, 0.0000], [1.1410, -0.6588, 0.0000], [1.2172, -0.5042, 0.0000], [1.2726, -0.3410, 0.0000], [1.3062, -0.1719, 0.0000], [1.3175, 0.0000, 0.0000], [1.3062, 0.1719, 0.0000], [1.3962, 0.1838, 0.0000], [1.3602, 0.3644, 0.0000], [1.3010, 0.5389, 0.0000], [1.2195, 0.7041, 0.0000], [1.1172, 0.8573, 0.0000], [0.9958, 0.9958, 0.0000], [0.8573, 1.1172, 0.0000], [0.7041, 1.2195, 0.0000], [0.5389, 1.3010, 0.0000], [0.3644, 1.3602, 0.0000], [0.1838, 1.3962, 0.0000], [0.1719, 1.3062, 0.0000], [0.0000, 1.3175, 0.0000], [-0.1719, 1.3062, 0.0000], [-0.1838, 1.3962, 0.0000], [-0.3644, 1.3602, 0.0000], [-0.5389, 1.3010, 0.0000], [-0.7041, 1.2195, 0.0000], [-0.8573, 1.1172, 0.0000], [-0.9958, 0.9958, 0.0000], [-1.1172, 0.8573, 0.0000], [-1.2195, 0.7041, 0.0000], [-1.3010, 0.5389, 0.0000], [-1.3602, 0.3644, 0.0000], [-1.3962, 0.1838, 0.0000], [-1.3062, 0.1719, 0.0000], [-1.3175, 0.0000, 0.0000], [-1.3062, -0.1719, 0.0000], [-1.3962, -0.1838, 0.0000], [-1.3602, -0.3644, 0.0000], [-1.3010, -0.5389, 0.0000], [-1.2195, -0.7041, 0.0000], [-1.1172, -0.8573, 0.0000], [-0.9958, -0.9958, 0.0000], [-0.8573, -1.1172, 0.0000], [-0.7041, -1.2195, 0.0000], [-0.5389, -1.3010, 0.0000], [-0.3644, -1.3602, 0.0000], [-0.1838, -1.3962, 0.0000], [-0.1719, -1.3062, 0.0000], [0.0000, -1.3175, 0.0000], [0.1719, -1.3062, 0.0000], [0.1838, -1.3962, 0.0000], [0.3644, -1.3602, 0.0000], [0.5389, -1.3010, 0.0000], [0.7041, -1.2195, 0.0000], [0.8573, -1.1172, 0.0000], [0.9958, -0.9958, 0.0000], [1.1172, -0.8573, 0.0000], [1.2195, -0.7041, 0.0000], [1.3010, -0.5389, 0.0000], [1.3602, -0.3644, 0.0000], [1.3962, -0.1838, 0.0000], [1.3062, -0.1719, 0.0000], [1.3175, 0.0000, 0.0000], [1.3062, 0.1719, 0.0000]],

                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0, 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0, 191.0, 192.0, 193.0, 194.0, 195.0, 196.0, 197.0, 198.0, 199.0, 200.0, 201.0, 202.0, 203.0, 204.0, 205.0, 206.0, 207.0, 208.0, 209.0, 210.0, 211.0, 212.0, 213.0, 214.0, 215.0, 216.0, 217.0, 218.0, 219.0, 220.0, 221.0, 222.0, 223.0, 224.0, 225.0, 226.0, 227.0, 228.0, 229.0, 230.0, 231.0,
                        232.0, 233.0, 234.0, 235.0, 236.0, 237.0, 238.0, 239.0, 240.0, 241.0, 242.0, 243.0, 244.0, 245.0, 246.0, 247.0, 248.0, 249.0, 250.0, 251.0, 252.0, 253.0, 254.0, 255.0, 256.0, 257.0, 258.0, 259.0, 260.0, 261.0, 262.0, 263.0, 264.0, 265.0, 266.0, 267.0, 268.0, 269.0, 270.0, 271.0, 272.0, 273.0, 274.0, 275.0, 276.0, 277.0, 278.0, 279.0, 280.0, 281.0, 282.0, 283.0, 284.0, 285.0, 286.0, 287.0, 288.0, 289.0, 290.0, 291.0, 292.0, 293.0, 294.0, 295.0, 296.0, 297.0, 298.0, 299.0, 300.0, 301.0, 302.0, 303.0, 304.0, 305.0, 306.0, 307.0, 308.0, 309.0, 310.0, 311.0, 312.0, 313.0, 314.0, 315.0, 316.0, 317.0, 318.0, 319.0, 320.0, 321.0, 322.0, 323.0, 324.0, 325.0, 326.0, 327.0, 328.0, 329.0, 330.0, 331.0, 332.0, 334.0, 335.0, 336.0, 337.0, 338.0, 339.0, 340.0, 341.0, 342.0, 343.0, 344.0, 345.0, 346.0, 347.0, 348.0, 349.0, 350.0, 351.0, 352.0, 353.0, 354.0, 355.0, 356.0, 357.0, 358.0, 359.0, 360.0, 361.0, 362.0, 363.0, 364.0, 365.0, 366.0, 367.0, 368.0, 369.0, 370.0, 371.0, 372.0, 373.0, 374.0, 375.0, 376.0, 377.0, 378.0, 379.0, 380.0, 381.0, 382.0, 383.0, 384.0, 385.0, 386.0, 387.0, 388.0, 389.0, 390.0, 391.0, 392.0, 393.0, 394.0, 395.0, 396.0, 397.0, 398.0, 399.0, 400.0, 401.0, 402.0, 403.0, 404.0, 405.0, 406.0, 407.0, 408.0, 409.0, 410.0, 411.0, 412.0, 413.0, 414.0, 415.0, 416.0, 417.0, 418.0, 419.0, 420.0, 421.0, 422.0, 423.0, 424.0, 425.0, 426.0, 427.0, 428.0, 429.0, 430.0, 431.0, 432.0, 433.0, 434.0, 435.0, 436.0, 437.0, 438.0, 439.0, 440.0, 441.0, 442.0, 443.0, 444.0],
                     d=1,
                     n="ball_ctrl")
    return _ctrl


@undo
def square_shape():
    _ctrl = pm.curve(p=[[1.5010, 0.0269, 1.5010], [1.5010, 0.0269, -1.5010], [-1.5010, 0.0269, -1.5010], [-1.5010, 0.0051, 1.5010], [1.5010, 0.0269, 1.5010]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0],
                     d=1,
                     n="square_ctrl",
                     )
    return _ctrl


@undo
def square_prop_shape():

    selection = pm.selected()

    @changeColor()
    def square_prop(sub):

        pm.select(sub)
        if pm.objectType(sub) == 'joint':
            square = pm.curve(p=[(0.55, 0.02, 0.55), (0.55, 0.02, -0.55), (-0.55, 0.02, -0.55), (-0.55, 0.012, 0.55), (0.55, 0.02, 0.55)], k=[0.0, 1.0, 2.0, 3.0, 4.0], d=1, n="square_ctrl")
            pm.matchTransform(square, sub)
            return square

        else:
            Bbox = sub.getBoundingBox()

            minZ = [Bbox.max()[0], Bbox.center()[1], Bbox.min()[2]]
            maxZ = [Bbox.max()[0], Bbox.center()[1], Bbox.max()[2]]

            minX = [Bbox.min()[0], Bbox.center()[1], Bbox.max()[2]]
            maxX = [Bbox.min()[0], Bbox.center()[1], Bbox.min()[2]]

            def mminiLoc(pos):
                miniloc = pm.spaceLocator(position=pos, n='{}_miniLoc'.format(oGeo))
                miniloc.overrideEnabled.set(1)
                miniloc.overrideRGBColors.set(1)
                miniloc.overrideColorRGB.set(1, 0, 0)

                miniloc.localScaleX.set(0.2)
                miniloc.localScaleY.set(0.2)
                miniloc.localScaleZ.set(0.2)

            # mminiLoc(minZ)
            # mminiLoc(maxZ)
            # mminiLoc(minX)
            # mminiLoc(maxX)

            if (minZ[0] - maxX[0]) > (minX[2] - maxX[2]):

                newScale = (minZ[0] - maxX[0])
            else:
                newScale = (minX[2] - maxX[2])

            _ctrl = pm.curve(p=[(minZ), (maxZ), (minX), (maxX), (minZ)], k=[0.0, 1.0, 2.0, 3.0, 4.0], d=1, n="square_ctrl")
            pm.xform(_ctrl, cp=1)
            return _ctrl

    if pm.selected():

        for sel in selection:
            _ctrl = square_prop(sel)

    else:
        @changeColor()
        def singleSquare():
            _ctrl = pm.curve(p=[(0.55, 0.02, 0.55), (0.55, 0.02, -0.55), (-0.55, 0.02, -0.55), (-0.55, 0.012, 0.55), (0.55, 0.02, 0.55)],
                             k=[0.0, 1.0, 2.0, 3.0, 4.0],
                             d=1,
                             n="square_ctrl"
                             )
            return _ctrl
        singleSquare()

    return _ctrl


@undo
def cog_shape():
    _ctrl = pm.curve(p=[[1.1475, 0.0000, -0.0205], [1.4549, 0.0000, 0.1025], [1.4549, 0.0000, 0.1639], [1.4549, 0.0000, 0.2459], [1.4344, 0.0000, 0.3074], [1.4139, 0.0000, 0.3689], [1.3730, 0.0000, 0.4303], [1.0656, 0.0000, 0.4303], [1.0246, 0.0000, 0.5123], [0.9836, 0.0000, 0.5943], [0.9221, 0.0000, 0.6557], [0.8812, 0.0000, 0.7377], [0.8197, 0.0000, 0.7992], [0.9631, 0.0000, 1.0861], [0.9016, 0.0000, 1.1475], [0.8607, 0.0000, 1.1885], [0.7992, 0.0000, 1.2295], [0.7377, 0.0000, 1.2705], [0.6762, 0.0000, 1.2910], [0.4508, 0.0000, 1.0451], [0.3689, 0.0000, 1.0861], [0.2869, 0.0000, 1.1066], [0.1844, 0.0000, 1.1271], [0.1025, 0.0000, 1.1271], [0.0205, 0.0000, 1.1475], [-0.1025, 0.0000, 1.4549], [-0.1639, 0.0000, 1.4549], [-0.2459, 0.0000, 1.4549], [-0.3074, 0.0000, 1.4344], [-0.3689, 0.0000, 1.4139], [-0.4303, 0.0000, 1.3730], [-0.4303, 0.0000, 1.0656], [-0.5123, 0.0000, 1.0246], [-0.5943, 0.0000, 0.9836], [-0.6557, 0.0000, 0.9221], [-0.7377, 0.0000, 0.8812], [-0.7992, 0.0000, 0.8197], [-1.0861, 0.0000, 0.9631], [-1.1475, 0.0000, 0.9016], [-1.1885, 0.0000, 0.8607], [-1.2295, 0.0000, 0.7992], [-1.2705, 0.0000, 0.7377], [-1.2910, 0.0000, 0.6762],
                        [-1.0451, 0.0000, 0.4508], [-1.0861, 0.0000, 0.3689], [-1.1066, 0.0000, 0.2869], [-1.1271, 0.0000, 0.1844], [-1.1271, 0.0000, 0.1025], [-1.1475, 0.0000, 0.0205], [-1.4549, 0.0000, -0.1025], [-1.4549, 0.0000, -0.1639], [-1.4549, 0.0000, -0.2459], [-1.4344, 0.0000, -0.3074], [-1.4139, 0.0000, -0.3689], [-1.3730, 0.0000, -0.4303], [-1.0656, 0.0000, -0.4303], [-1.0246, 0.0000, -0.5123], [-0.9836, 0.0000, -0.5943], [-0.9221, 0.0000, -0.6557], [-0.8812, 0.0000, -0.7377], [-0.8197, 0.0000, -0.7992], [-0.9631, 0.0000, -1.0861], [-0.9016, 0.0000, -1.1475], [-0.8607, 0.0000, -1.1885], [-0.7992, 0.0000, -1.2295], [-0.7377, 0.0000, -1.2705], [-0.7377, 0.0000, -1.2705], [-0.6762, 0.0000, -1.2910], [-0.4508, 0.0000, -1.0451], [-0.3689, 0.0000, -1.0861], [-0.2869, 0.0000, -1.1066], [-0.1844, 0.0000, -1.1271], [-0.1025, 0.0000, -1.1271], [-0.0205, 0.0000, -1.1475], [0.1025, 0.0000, -1.4549], [0.1639, 0.0000, -1.4549], [0.2459, 0.0000, -1.4549], [0.3074, 0.0000, -1.4344], [0.3689, 0.0000, -1.4139], [0.4303, 0.0000, -1.3730], [0.4303, 0.0000, -1.0656], [0.5123, 0.0000, -1.0246], [0.5943, 0.0000, -0.9836], [0.6557, 0.0000, -0.9221],
                        [0.7377, 0.0000, -0.8812], [0.7992, 0.0000, -0.8197], [1.0861, 0.0000, -0.9631], [1.1475, 0.0000, -0.9016], [1.1885, 0.0000, -0.8607], [1.2295, 0.0000, -0.7992], [1.2705, 0.0000, -0.7377], [1.2910, 0.0000, -0.6762], [1.0451, 0.0000, -0.4508], [1.0861, 0.0000, -0.3689], [1.1066, 0.0000, -0.2869], [1.1271, 0.0000, -0.1844], [1.1271, 0.0000, -0.1025], [1.1475, 0.0000, -0.0205], [0.4713, 0.0000, 0.0000], [0.4713, 0.0000, 0.0410], [0.4713, 0.0000, 0.0615], [0.4713, 0.0000, 0.1025], [0.4508, 0.0000, 0.1434], [0.4303, 0.0000, 0.1844], [0.4303, 0.0000, 0.2049], [0.4098, 0.0000, 0.2459], [0.3893, 0.0000, 0.2664], [0.3689, 0.0000, 0.3074], [0.3484, 0.0000, 0.3279], [0.3074, 0.0000, 0.3484], [0.2869, 0.0000, 0.3893], [0.2459, 0.0000, 0.4098], [0.2254, 0.0000, 0.4303], [0.1844, 0.0000, 0.4303], [0.1434, 0.0000, 0.4508], [0.1230, 0.0000, 0.4508], [0.0820, 0.0000, 0.4713], [0.0410, 0.0000, 0.4713], [0.0000, 0.0000, 0.4713], [-0.0410, 0.0000, 0.4713], [-0.0615, 0.0000, 0.4713], [-0.1025, 0.0000, 0.4713], [-0.1434, 0.0000, 0.4508], [-0.1844, 0.0000, 0.4303], [-0.2049, 0.0000, 0.4303], [-0.2459, 0.0000, 0.4098], [-0.2664, 0.0000, 0.3893],
                        [-0.3074, 0.0000, 0.3689], [-0.3279, 0.0000, 0.3484], [-0.3484, 0.0000, 0.3074], [-0.3893, 0.0000, 0.2869], [-0.4098, 0.0000, 0.2459], [-0.4303, 0.0000, 0.2254], [-0.4303, 0.0000, 0.1844], [-0.4508, 0.0000, 0.1434], [-0.4508, 0.0000, 0.1230], [-0.4713, 0.0000, 0.0820], [-0.4713, 0.0000, 0.0410], [-0.4713, 0.0000, 0.0000], [-0.4713, 0.0000, -0.0410], [-0.4713, 0.0000, -0.0615], [-0.4713, 0.0000, -0.1025], [-0.4508, 0.0000, -0.1434], [-0.4303, 0.0000, -0.1844], [-0.4303, 0.0000, -0.2049], [-0.4098, 0.0000, -0.2459], [-0.3893, 0.0000, -0.2664], [-0.3689, 0.0000, -0.3074], [-0.3484, 0.0000, -0.3279], [-0.3074, 0.0000, -0.3484], [-0.2869, 0.0000, -0.3893], [-0.2459, 0.0000, -0.4098], [-0.2254, 0.0000, -0.4303], [-0.1844, 0.0000, -0.4303], [-0.1434, 0.0000, -0.4508], [-0.1230, 0.0000, -0.4508], [-0.0820, 0.0000, -0.4713], [-0.0410, 0.0000, -0.4713], [0.0000, 0.0000, -0.4713], [0.0410, 0.0000, -0.4713], [0.0615, 0.0000, -0.4713], [0.1025, 0.0000, -0.4713], [0.1434, 0.0000, -0.4508], [0.1844, 0.0000, -0.4303], [0.2049, 0.0000, -0.4303], [0.2459, 0.0000, -0.4098], [0.2664, 0.0000, -0.3893], [0.3074, 0.0000, -0.3689], [0.3279, 0.0000, -0.3484],
                        [0.3484, 0.0000, -0.3074], [0.3893, 0.0000, -0.2869], [0.4098, 0.0000, -0.2459], [0.4303, 0.0000, -0.2254], [0.4303, 0.0000, -0.1844], [0.4508, 0.0000, -0.1434], [0.4508, 0.0000, -0.1230], [0.4713, 0.0000, -0.0820], [0.4713, 0.0000, -0.0410], [0.4713, 0.0000, 0.0000]],


                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0,
                        97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0],
                     d=1,
                     n="cog_ctrl",
                     )
    return _ctrl


@undo
def locator_shape():
    _ctrl = pm.curve(p=[[0.0000, 1.4440, 0.0000], [0.0000, 0.0000, 0.0000], [0.0000, -1.4440, 0.0000], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, 1.4440], [0.0000, 0.0000, 0.0000], [0.0000, 0.0000, -1.4440], [0.0000, 0.0000, 0.0000], [1.4440, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000], [-1.4440, 0.0000, 0.0000], [0.0000, 0.0000, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0],
                     d=1,
                     n="locator_shape",
                     )
    return _ctrl


@undo
def ik_shape(scale=2):

    def CombineShape():
        oNurbs = pm.selected()
        oDriver = oNurbs[0]
        oDriven = oNurbs[1:]

        shapes = [x.getShapes() for x in oDriven]
        transforms = [x.getTransform() for x in oDriven]

        pm.select(None)
        pm.select(shapes)
        pm.select(oDriver, add=True)

        pm.parent(r=True, s=True)
        pm.delete(transforms)
        return oDriver

    i_shape = pm.curve(p=[[0.2564, -0.0047, 0.0000], [0.3479, -0.0047, 0.0000], [0.3479, 0.6709, 0.0000], [0.2564, 0.6709, 0.0000], [0.2564, -0.0047, 0.0000]],
                       d=1,
                       k=[0.0, 1.0, 2.0, 3.0, 4.0]
                       )
    k_shape = pm.curve(p=[[1.1233, 0.0000, 0.0000], [1.2351, 0.0000, 0.0000], [0.9142, 0.3761, 0.0000], [1.1973, 0.6650, 0.0000], [1.0911, 0.6650, 0.0000], [0.7707, 0.3318, 0.0000], [0.7707, 0.6650, 0.0000], [0.6805, 0.6650, 0.0000], [
                       0.6805, 0.0000, 0.0000], [0.7707, 0.0000, 0.0000], [0.7707, 0.2548, 0.0000], [0.8575, 0.3209, 0.0000], [1.1233, 0.0000, 0.0000]],
                       d=1,
                       k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0])


    pm.select(i_shape)
    pm.select(k_shape, add=1)
    new_shape = CombineShape()
    pm.rename(new_shape, 'ik_shape')

    new_shape.scaleX.set(scale)
    new_shape.scaleY.set(scale)
    new_shape.scaleZ.set(scale)
    pm.select(new_shape)
    mc.FreezeTransformations()
    return new_shape


@undo
def fk_shape(scale=2):
    def CombineShape():
        oNurbs = pm.selected()
        oDriver = oNurbs[0]
        oDriven = oNurbs[1:]

        shapes = [x.getShapes() for x in oDriven]
        transforms = [x.getTransform() for x in oDriven]

        pm.select(None)
        pm.select(shapes)
        pm.select(oDriver, add=True)

        pm.parent(r=True, s=True)
        pm.delete(transforms)
        return oDriver

    f_shape = pm.curve(p=[[0.1808, 0.5913, 0.0000], [0.5630, 0.5913, 0.0000], [0.5630, 0.6650, 0.0000], [0.0906, 0.6650, 0.0000], [0.0906, 0.0000, 0.0000], [0.1808, 0.0000, 0.0000], [0.1808, 0.2695, 0.0000],
                          [0.5517, 0.2695, 0.0000], [0.5517, 0.3440, 0.0000], [0.1808, 0.3440, 0.0000], [0.1808, 0.5913, 0.0000]], d=1, k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0])

    k_shape = pm.curve(p=[[1.1233, 0.0000, 0.0000], [1.2351, 0.0000, 0.0000], [0.9142, 0.3761, 0.0000], [1.1973, 0.6650, 0.0000], [1.0911, 0.6650, 0.0000], [0.7707, 0.3318, 0.0000], [0.7707, 0.6650, 0.0000], [0.6805, 0.6650, 0.0000], [
                       0.6805, 0.0000, 0.0000], [0.7707, 0.0000, 0.0000], [0.7707, 0.2548, 0.0000], [0.8575, 0.3209, 0.0000], [1.1233, 0.0000, 0.0000]],
                       d=1,
                       k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0])

    pm.select(f_shape)
    pm.select(k_shape, add=1)
    new_shape = CombineShape()
    pm.rename(new_shape, 'fk_shape')

    new_shape.scaleX.set(scale)
    new_shape.scaleY.set(scale)
    new_shape.scaleZ.set(scale)
    pm.select(new_shape)
    mc.FreezeTransformations()
    return new_shape


@undo
def ik_fk_shape(scale=2):
    def CombineShape(shape1, shape2):
            """
            Create a control with multiple shapes
            """
            oDriver = pm.PyNode(shape1)
            oDriven = pm.PyNode(shape2)

            shapes = oDriven.getShapes()
            transforms = oDriven.getTransform()

            pm.select(None)
            pm.select(shapes)
            pm.select(oDriver, add=True)

            pm.parent(r=True, s=True)
            pm.delete(transforms)
            return oDriver

    fk = fk_shape(scale)
    ik = ik_shape(scale)

    new_shape = CombineShape(ik, fk)
    pm.rename(new_shape, 'ik_fk__CTRL')
    pm.select(new_shape)
    mc.FreezeTransformations()

    return new_shape


@undo
def cylinder_shape():
    _ctrl = pm.curve(p=[[-1.4734, 0.2377, 0.0000], [1.4734, 0.2377, 0.0000], [1.4734, 0.1923, 0.1397], [-1.4734, 0.1923, 0.1397], [-1.4734, 0.2377, 0.0000], [-1.4734, 0.1923, 0.1397], [-1.4734, 0.0734, 0.2260], [1.4734, 0.0734, 0.2260], [1.4734, 0.1923, 0.1397], [1.4734, 0.0734, 0.2260], [1.4734, -0.0734, 0.2260], [-1.4734, -0.0734, 0.2260], [-1.4734, 0.0734, 0.2260], [-1.4734, -0.0734, 0.2260], [-1.4734, -0.1923, 0.1397], [1.4734, -0.1923, 0.1397], [1.4734, -0.0734, 0.2260], [1.4734, -0.1923, 0.1397], [1.4734, -0.2377, 0.0000], [-1.4734, -0.2377, 0.0000], [-1.4734, -0.1923, 0.1397], [-1.4734, -0.2377, 0.0000], [-1.4734, -0.1923, -0.1397], [1.4734, -0.1923, -0.1397], [1.4734, -0.2377, 0.0000], [1.4734, -0.1923, -0.1397], [1.4734, -0.0734, -0.2260], [-1.4734, -0.0734, -0.2260], [-1.4734, -0.1923, -0.1397], [-1.4734, -0.0734, -0.2260], [-1.4734, 0.0734, -0.2260], [1.4734, 0.0734, -0.2260], [1.4734, -0.0734, -0.2260], [1.4734, 0.0734, -0.2260], [1.4734, 0.1923, -0.1397], [-1.4734, 0.1923, -0.1397], [-1.4734, 0.0734, -0.2260], [-1.4734, 0.1923, -0.1397], [-1.4734, 0.2377, 0.0000], [1.4734, 0.2377, 0.0000], [1.4734, 0.1923, -0.1397]],
                    k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0,
                        21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0],
                    d=1,
                    n="cylinder_ctrl")
    return _ctrl


@undo
def foot_shape():
    _ctrl = pm.curve(p=[[0.9846, 0.0000, -1.1804], [0.0075, 0.0000, -1.6697], [-1.0005, 0.0000, -1.1804], [-1.0005, 0.0000, 0.1591], [-1.0005, 0.0000, 1.5146], [0.0075, 0.0000, 1.8461], [0.9846, 0.0000, 1.5146], [0.3715, 0.0000, 0.1591], [0.9846, 0.0000, -1.1804],
                        [0.0075, 0.0000, -1.6697], [-1.0005, 0.0000, -1.1804]],
                        k=[-2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],
                        d=3, n="foot_ctrl")
    return _ctrl


@undo
def hips_shape():
    _ctrl = pm.curve(p=[[-0.8197, -1.4012, -0.0005], [-0.8038, -1.4012, -0.1971], [-0.7569, -1.4012, -0.3862], [-0.6808, -1.4012, -0.5606], [-0.5783, -1.4012, -0.7132], [-0.4535, -1.4012, -0.8385], [-0.3112, -1.4012, -0.9316], [-0.1566, -1.4012, -0.9889], [0.0040, -1.4012, -1.0081], [0.1646, -1.4012, -0.9887], [0.3190, -1.4012, -0.9312], [0.4613, -1.4012, -0.8379], [0.5861, -1.4012, -0.7126], [0.6884, -1.4012, -0.5597], [0.7643, -1.4012, -0.3853], [0.8112, -1.4012, -0.1963], [0.8269, -1.4012, 0.0004], [0.8110, -1.4012, 0.1971], [0.7641, -1.4012, 0.3862], [0.6880, -1.4012, 0.5606], [0.5855, -1.4012, 0.7132], [0.4607, -1.4012, 0.8385], [0.3184, -1.4012, 0.9316], [0.1638, -1.4012, 0.9889], [0.0032, -1.4012, 1.0081], [-0.1574, -1.4012, 0.9887], [-0.3118, -1.4012, 0.9312], [-0.4541, -1.4012, 0.8379], [-0.5789, -1.4012, 0.7126], [-0.6812, -1.4012, 0.5597], [-0.7571, -1.4012, 0.3853], [-0.8040, -1.4012, 0.1963], [-0.8197, -1.4012, -0.0005], [-1.0504, -1.1207, -0.0006], [-1.2476, -0.8403, -0.0007], [-1.3937, -0.5597, -0.0009], [-1.5280, -0.2792, -0.0009], [-1.6487, 0.0013, -0.0010], [-1.7304, 0.2817, -0.0010], [-1.7877, 0.5623, -0.0010], [-1.8192, 0.8428, -0.0011], [-1.8248, 1.1234, -0.0011], [-1.8221, 1.4038, -0.0007], [-1.7869, 1.4038, -0.2836], [-1.6829, 1.4038, -0.5557], [-1.5141, 1.4038, -0.8064], [-1.2868, 1.4038, -1.0262], [-1.0100, 1.4038, -1.2065], [-0.6944, 1.4038, -1.3404], [-0.3518, 1.4038, -1.4228], [0.0044, 1.4038, -1.4506], [0.3606, 1.4038, -1.4226], [0.7030, 1.4038, -1.3399], [1.0186, 1.4038, -1.2058], [1.2952, 1.4038, -1.0253], [1.5221, 1.4038, -0.8054], [1.6907, 1.4038, -0.5545], [1.7945, 1.4038, -0.2824], [1.8293, 1.4038, 0.0006], [1.8320, 1.1234, 0.0010], [1.8264, 0.8428, 0.0010], [1.7949, 0.5623, 0.0009], [1.7376, 0.2817, 0.0009], [1.6559, 0.0013, 0.0009], [1.5352, -0.2792, 0.0007], [1.4009, -0.5597, 0.0007], [1.2548, -0.8403, 0.0006], [1.0576, -1.1207, 0.0005], [0.8269, -1.4012, 0.0004], [1.0576, -1.1207, 0.0005], [1.2548, -0.8403, 0.0006], [1.4009, -0.5597, 0.0007], [1.5352, -0.2792, 0.0007], [1.6559, 0.0013, 0.0009], [1.7376, 0.2817, 0.0009], [1.7949, 0.5623, 0.0009], [1.8264, 0.8428, 0.0010], [1.8320, 1.1234, 0.0010], [1.8293, 1.4038, 0.0006], [1.7941, 1.4038, 0.2836], [1.6901, 1.4038, 0.5557], [1.5212, 1.4038, 0.8064], [1.2940, 1.4038, 1.0262], [1.0172, 1.4038, 1.2065], [0.7016, 1.4038, 1.3404], [0.3590, 1.4038, 1.4228], [0.0028, 1.4038, 1.4506], [-0.3534, 1.4038, 1.4226], [-0.6958, 1.4038, 1.3399], [-1.0114, 1.4038, 1.2058], [-1.2880, 1.4038, 1.0253], [-1.5150, 1.4038, 0.8054], [-1.6835, 1.4038, 0.5545], [-1.7873, 1.4038, 0.2824], [-1.8221, 1.4038, -0.0007]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0],
                     d=1,
                     n="hips_ctrl",
                    )
    return _ctrl


@undo
def hips2_shape():
    _ctrl = pm.curve(p=[[-1.7577, -1.4476, -0.0006], [-1.7237, -1.4476, -0.2569], [-1.6234, -1.4476, -0.5033], [-1.4605, -1.4476, -0.7306], [-1.2411, -1.4476, -0.9295], [-0.9740, -1.4476, -1.0928], [-0.6695, -1.4476, -1.2141], [-0.3386, -1.4476, -1.2888], [0.0051, -1.4476, -1.3138], [0.3489, -1.4476, -1.2885], [0.6793, -1.4476, -1.2136], [0.9838, -1.4476, -1.0921], [1.2510, -1.4476, -0.9287], [1.4699, -1.4476, -0.7294], [1.6323, -1.4476, -0.5021], [1.7327, -1.4476, -0.2558], [1.7663, -1.4476, 0.0005], [1.7323, -1.4476, 0.2569], [1.6319, -1.4476, 0.5033], [1.4690, -1.4476, 0.7306], [1.2497, -1.4476, 0.9295], [0.9826, -1.4476, 1.0928], [0.6780, -1.4476, 1.2141], [0.3472, -1.4476, 1.2888], [0.0034, -1.4476, 1.3138], [-0.3403, -1.4476, 1.2885], [-0.6707, -1.4476, 1.2136], [-0.9753, -1.4476, 1.0921], [-1.2424, -1.4476, 0.9287], [-1.4614, -1.4476, 0.7294], [-1.6237, -1.4476, 0.5021], [-1.7241, -1.4476, 0.2558], [-1.7577, -1.4531, -0.0006], [-1.7800, -0.9903, -0.0006], [-1.8212, -0.3005, -0.0006], [-1.8427, 0.1530, -0.0006], [-1.8688, 0.6295, -0.0007], [-1.8745, 1.0792, -0.0007], [-1.8828, 1.4485, -0.0007], [-1.8466, 1.4519, -0.2751], [-1.7391, 1.4519, -0.5391], [-1.5646, 1.4519, -0.7824], [-1.3297, 1.4519, -0.9956], [-1.0435, 1.4519, -1.1706], [-0.7173, 1.4519, -1.3004], [-0.3631, 1.4519, -1.3804], [0.0051, 1.4519, -1.4073], [0.3733, 1.4519, -1.3802], [0.7272, 1.4519, -1.2999], [1.0535, 1.4519, -1.1698], [1.3395, 1.4519, -0.9947], [1.5740, 1.4519, -0.7814], [1.7483, 1.4519, -0.5379], [1.8556, 1.4519, -0.2740], [1.8913, 1.4485, 0.0006], [1.8831, 1.0792, 0.0006], [1.8773, 0.6295, 0.0006], [1.8512, 0.1530, 0.0006], [1.8297, -0.3005, 0.0006], [1.7886, -0.9903, 0.0006], [1.7663, -1.4531, 0.0005], [1.7886, -0.9903, 0.0006], [1.8297, -0.3005, 0.0006], [1.8512, 0.1530, 0.0006], [1.8773, 0.6295, 0.0006], [1.8831, 1.0792, 0.0006], [1.8913, 1.4485, 0.0006], [1.8552, 1.4519, 0.2751], [1.7477, 1.4519, 0.5391], [1.5731, 1.4519, 0.7824], [1.3382, 1.4519, 0.9956], [1.0521, 1.4519, 1.1706], [0.7258, 1.4519, 1.3004], [0.3717, 1.4519, 1.3804], [0.0035, 1.4519, 1.4073], [-0.3647, 1.4519, 1.3802], [-0.7187, 1.4519, 1.2999], [-1.0450, 1.4519, 1.1698], [-1.3309, 1.4519, 0.9947], [-1.5655, 1.4519, 0.7814], [-1.7397, 1.4519, 0.5379], [-1.8470, 1.4519, 0.2740], [-1.8830, 1.4519, -0.0007]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 68.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0],
                     d=1,
                     n="hips_ctrl",
                    )
    return _ctrl


@undo
def chest_shape():
    _ctrl = pm.curve(p=[[-0.7361, 1.3145, -0.0004], [-0.7218, 1.3145, -0.1584], [-0.6797, 1.3145, -0.3103], [-0.6113, 1.3145, -0.4504], [-0.5192, 1.3145, -0.5730], [-0.4071, 1.3145, -0.6737], [-0.2792, 1.3145, -0.7485], [-0.1403, 1.3145, -0.7945], [0.0040, 1.3145, -0.8100], [0.1483, 1.3145, -0.7944], [0.2870, 1.3145, -0.7482], [0.4148, 1.3145, -0.6732], [0.5270, 1.3145, -0.5725], [0.6189, 1.3145, -0.4497], [0.6871, 1.3145, -0.3096], [0.7292, 1.3145, -0.1577], [0.7433, 1.3145, 0.0003], [0.7290, 1.3145, 0.1584], [0.6869, 1.3145, 0.3103], [0.6185, 1.3145, 0.4504], [0.5264, 1.3145, 0.5730], [0.4143, 1.3145, 0.6737], [0.2864, 1.3145, 0.7485], [0.1475, 1.3145, 0.7945], [0.0032, 1.3145, 0.8100], [-0.1411, 1.3145, 0.7944], [-0.2798, 1.3145, 0.7482], [-0.4076, 1.3145, 0.6732], [-0.5198, 1.3145, 0.5725], [-0.6117, 1.3145, 0.4497], [-0.6799, 1.3145, 0.3096], [-0.7220, 1.3145, 0.1577], [-0.7361, 1.3145, -0.0004], [-0.9433, 1.0402, -0.0005], [-1.1171, 0.7660, -0.0006], [-1.2377, 0.4916, -0.0007], [-1.3407, 0.2173, -0.0007], [-1.4261, -0.0570, -0.0008], [-1.4662, -0.3312, -0.0008], [-1.4761, -0.6056, -0.0008], [-1.4757, -0.8799, -0.0009], [-1.4750, -1.1543, -0.0009], [-1.4379, -1.4285, -0.0006], [-1.3958, -1.4285, -0.2341], [-1.3145, -1.4285, -0.4587], [-1.1826, -1.4285, -0.6657], [-1.0049, -1.4285, -0.8471], [-0.7886, -1.4285, -0.9960], [-0.5419, -1.4285, -1.1065], [-0.2741, -1.4285, -1.1746], [0.0042, -1.4285, -1.1975], [0.2826, -1.4285, -1.1744], [0.5503, -1.4285, -1.1061], [0.7969, -1.4285, -0.9954], [1.0131, -1.4285, -0.8464], [1.1904, -1.4285, -0.6649], [1.3222, -1.4285, -0.4577], [1.4065, -1.4285, -0.2331], [1.4528, -1.4285, 0.0005], [1.4822, -1.1543, 0.0008], [1.4750, -0.8799, 0.0008], [1.4784, -0.6056, 0.0007], [1.4730, -0.3312, 0.0007], [1.4333, -0.0570, 0.0007], [1.3479, 0.2173, 0.0006], [1.2449, 0.4916, 0.0006], [1.1243, 0.7660, 0.0005], [0.9505, 1.0402, 0.0004], [0.7433, 1.3145, 0.0003], [0.9505, 1.0402, 0.0004], [1.1243, 0.7660, 0.0005], [1.2449, 0.4916, 0.0006], [1.3479, 0.2173, 0.0006], [1.4333, -0.0570, 0.0007], [1.4734, -0.3312, 0.0007], [1.4833, -0.6056, 0.0007], [1.4829, -0.8799, 0.0008], [1.4822, -1.1543, 0.0008], [1.4451, -1.4285, 0.0005], [1.4030, -1.4285, 0.2341], [1.3217, -1.4285, 0.4587], [1.1897, -1.4285, 0.6657], [1.0121, -1.4285, 0.8471], [0.7958, -1.4285, 0.9960], [0.5491, -1.4285, 1.1065], [0.2813, -1.4285, 1.1746], [0.0030, -1.4285, 1.1975], [-0.2754, -1.4285, 1.1744], [-0.5431, -1.4285, 1.1061], [-0.7897, -1.4285, 0.9954], [-1.0059, -1.4285, 0.8464], [-1.1833, -1.4285, 0.6649], [-1.3150, -1.4285, 0.4577], [-1.3961, -1.4285, 0.2331], [-1.4234, -1.4285, -0.0006]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0],
                     d=1,
                     n="chest_ctrl",
                    )
    return _ctrl


@undo
def VSO_shape():
    vis_ctrl = pm.curve(p=[[-2.4285, -1.4102, 0.0000], [-1.9136, -1.4102, 0.0000], [-0.7925, 1.4279, 0.0000], [-1.2730, 1.4279, 0.0000], [-2.1447, -0.7791, 0.0000], [-2.9684, 1.4279, 0.0000], [-3.4843, 1.4279, 0.0000], [-2.4285, -1.4102, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0],
                     d=1,
                     n="Visibility_ctrl",
                    )
    space_ctrl = pm.curve(p=[[-0.3569, -1.3109, 0.0000], [-0.1142, -1.3830, 0.0000], [0.1096, -1.4344, 0.0000], [0.3144, -1.4653, 0.0000], [0.5003, -1.4756, 0.0000], [0.7199, -1.4605, 0.0000], [0.9191, -1.4155, 0.0000], [1.0976, -1.3403, 0.0000], [1.2555, -1.2351, 0.0000], [1.3847, -1.1066, 0.0000], [1.4770, -0.9614, 0.0000], [1.5324, -0.7995, 0.0000], [1.5508, -0.6210, 0.0000], [1.5399, -0.4795, 0.0000], [1.5071, -0.3502, 0.0000], [1.4523, -0.2332, 0.0000], [1.3757, -0.1284, 0.0000], [1.2728, -0.0309, 0.0000], [1.1392, 0.0640, 0.0000], [0.9749, 0.1566, 0.0000], [0.7799, 0.2467, 0.0000], [0.5316, 0.3512, 0.0000], [0.3670, 0.4355, 0.0000], [0.2494, 0.5289, 0.0000], [0.1788, 0.6315, 0.0000], [0.1612, 0.6862, 0.0000], [0.1553, 0.7432, 0.0000], [0.1637, 0.8214, 0.0000], [0.1889, 0.8912, 0.0000], [0.2310, 0.9527, 0.0000], [0.2899, 1.0058, 0.0000], [0.3628, 1.0487, 0.0000], [0.4470, 1.0793, 0.0000], [0.5425, 1.0977, 0.0000], [0.6492, 1.1038, 0.0000], [0.7882, 1.0958, 0.0000], [0.9491, 1.0718, 0.0000], [1.3365, 0.9758, 0.0000], [1.3365, 1.4044, 0.0000], [1.2294, 1.4253, 0.0000], [0.9073, 1.4743, 0.0000], [0.6414, 1.4906, 0.0000], [0.4249, 1.4773, 0.0000], [0.2327, 1.4374, 0.0000], [0.0649, 1.3708, 0.0000], [-0.0786, 1.2776, 0.0000], [-0.1935, 1.1613, 0.0000], [-0.2756, 1.0251, 0.0000], [-0.3248, 0.8692, 0.0000], [-0.3413, 0.6935, 0.0000], [-0.3308, 0.5673, 0.0000], [-0.2996, 0.4487, 0.0000], [-0.2475, 0.3377, 0.0000], [-0.1747, 0.2342, 0.0000], [-0.0809, 0.1384, 0.0000], [0.0336, 0.0502, 0.0000], [0.1690, -0.0305, 0.0000], [0.3252, -0.1035, 0.0000], [0.6257, -0.2316, 0.0000], [0.8052, -0.3236, 0.0000], [0.9334, -0.4270, 0.0000], [1.0104, -0.5418, 0.0000], [1.0296, -0.6035, 0.0000], [1.0360, -0.6680, 0.0000], [1.0269, -0.7544, 0.0000], [0.9994, -0.8333, 0.0000], [0.9537, -0.9047, 0.0000], [0.8897, -0.9686, 0.0000], [0.8117, -1.0212, 0.0000], [0.7244, -1.0587, 0.0000], [0.6275, -1.0813, 0.0000], [0.5212, -1.0888, 0.0000], [0.3261, -1.0731, 0.0000], [0.1148, -1.0261, 0.0000], [-0.1129, -0.9477, 0.0000], [-0.3569, -0.8379, 0.0000], [-0.3569, -1.3109, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0],
                     d=1,
                     n="Spaces_ctrl",
                    )

    options_ctrl = pm.curve(p=[[4.8493, 0.0234, -0.0000], [5.2005, -0.1171, 0.0000], [5.2005, -0.1873, 0.0000], [5.2005, -0.2810, 0.0000], [5.1771, -0.3512, 0.0000], [5.1537, -0.4215, 0.0000], [5.1070, -0.4916, 0.0000], [4.7557, -0.4916, 0.0000], [4.7089, -0.5853, 0.0000], [4.6620, -0.6790, 0.0000], [4.5918, -0.7492, 0.0000], [4.5450, -0.8429, 0.0000], [4.4748, -0.9131, 0.0000], [4.6386, -1.2409, 0.0000], [4.5684, -1.3111, 0.0000], [4.5216, -1.3579, 0.0000], [4.4514, -1.4048, 0.0000], [4.3811, -1.4516, 0.0000], [4.3108, -1.4750, 0.0000], [4.0533, -1.1941, 0.0000], [3.9597, -1.2409, 0.0000], [3.8660, -1.2644, 0.0000], [3.7489, -1.2878, 0.0000], [3.6553, -1.2878, 0.0000], [3.5617, -1.3111, 0.0000], [3.4211, -1.6623, 0.0000], [3.3510, -1.6623, 0.0000], [3.2573, -1.6623, 0.0000], [3.1870, -1.6389, 0.0000], [3.1167, -1.6155, 0.0000], [3.0466, -1.5687, 0.0000], [3.0466, -1.2175, 0.0000], [2.9529, -1.1707, 0.0000], [2.8592, -1.1238, 0.0000], [2.7891, -1.0536, 0.0000], [2.6954, -1.0068, 0.0000], [2.6251, -0.9366, 0.0000], [2.2973, -1.1004, 0.0000], [2.2271, -1.0301, 0.0000], [2.1803, -0.9834, 0.0000], [2.1335, -0.9131, 0.0000], [2.0866, -0.8429, 0.0000], [2.0632, -0.7726, 0.0000], [2.3441, -0.5151, 0.0000], [2.2973, -0.4215, 0.0000], [2.2739, -0.3278, 0.0000], [2.2505, -0.2107, 0.0000], [2.2505, -0.1171, 0.0000], [2.2271, -0.0234, 0.0000], [1.8759, 0.1171, -0.0000], [1.8759, 0.1873, -0.0000], [1.8759, 0.2810, -0.0000], [1.8993, 0.3512, -0.0000], [1.9228, 0.4215, -0.0000], [1.9695, 0.4916, -0.0000], [2.3207, 0.4916, -0.0000], [2.3676, 0.5853, -0.0000], [2.4144, 0.6790, -0.0000], [2.4847, 0.7492, -0.0000], [2.5314, 0.8429, -0.0000], [2.6017, 0.9131, -0.0000], [2.4378, 1.2409, -0.0000], [2.5081, 1.3111, -0.0000], [2.5548, 1.3579, -0.0000], [2.6251, 1.4048, -0.0000], [2.6954, 1.4516, -0.0000], [2.6954, 1.4516, -0.0000], [2.7656, 1.4750, -0.0000], [3.0232, 1.1941, -0.0000], [3.1167, 1.2409, -0.0000], [3.2104, 1.2644, -0.0000], [3.3275, 1.2878, -0.0000], [3.4211, 1.2878, -0.0000], [3.5148, 1.3111, -0.0000], [3.6553, 1.6623, -0.0000], [3.7255, 1.6623, -0.0000], 
                              [3.8192, 1.6623, -0.0000], [3.8895, 1.6389, -0.0000], [3.9597, 1.6155, -0.0000], [4.0299, 1.5687, -0.0000], [4.0299, 1.2175, -0.0000], [4.1236, 1.1707, -0.0000], [4.2173, 1.1238, -0.0000], [4.2874, 1.0536, -0.0000], [4.3811, 1.0068, -0.0000], [4.4514, 0.9366, -0.0000], [4.7792, 1.1004, -0.0000], [4.8493, 1.0301, -0.0000], [4.8962, 0.9834, -0.0000], [4.9430, 0.9131, -0.0000], [4.9898, 0.8429, -0.0000], [5.0133, 0.7726, -0.0000], [4.7323, 0.5151, -0.0000], [4.7792, 0.4215, -0.0000], [4.8026, 0.3278, -0.0000], [4.8260, 0.2107, -0.0000], [4.8260, 0.1171, -0.0000], [4.8493, 0.0234, -0.0000], [4.0767, 0.0000, 0.0000], [4.0767, -0.0468, 0.0000], [4.0767, -0.0703, 0.0000], [4.0767, -0.1171, 0.0000], [4.0533, -0.1638, 0.0000], [4.0299, -0.2107, 0.0000], [4.0299, -0.2341, 0.0000], [4.0064, -0.2810, 0.0000], [3.9830, -0.3044, 0.0000], [3.9597, -0.3512, 0.0000], [3.9363, -0.3746, 0.0000], [3.8895, -0.3981, 0.0000], [3.8660, -0.4448, 0.0000], [3.8192, -0.4682, 0.0000], [3.7958, -0.4916, 0.0000], [3.7489, -0.4916, 0.0000], [3.7021, -0.5151, 0.0000], [3.6788, -0.5151, 0.0000], [3.6319, -0.5385, 0.0000], [3.5851, -0.5385, 0.0000], [3.5382, -0.5385, 0.0000], [3.4914, -0.5385, 0.0000], [3.4680, -0.5385, 0.0000], [3.4211, -0.5385, 0.0000], [3.3744, -0.5151, 0.0000], [3.3275, -0.4916, 0.0000], [3.3041, -0.4916, 0.0000], [3.2573, -0.4682, 0.0000], [3.2339, -0.4448, 0.0000], [3.1870, -0.4215, 0.0000], [3.1636, -0.3981, 0.0000], [3.1402, -0.3512, 0.0000], [3.0934, -0.3278, 0.0000], [3.0700, -0.2810, 0.0000], [3.0466, -0.2575, 0.0000], [3.0466, -0.2107, 0.0000], [3.0232, -0.1638, 0.0000], [3.0232, -0.1405, 0.0000], [2.9997, -0.0937, 0.0000], [2.9997, -0.0468, 0.0000], [2.9997, 0.0000, 0.0000], [2.9997, 0.0468, -0.0000], [2.9997, 0.0703, -0.0000], [2.9997, 0.1171, -0.0000], [3.0232, 0.1638, -0.0000], [3.0466, 0.2107, -0.0000], [3.0466, 0.2341, -0.0000], [3.0700, 0.2810, -0.0000], [3.0934, 0.3044, -0.0000], [3.1167, 0.3512, -0.0000], [3.1402, 0.3746, -0.0000], [3.1870, 0.3981, -0.0000], [3.2104, 0.4448, -0.0000], [3.2573, 0.4682, -0.0000], [3.2807, 0.4916, -0.0000], 
                              [3.3275, 0.4916, -0.0000], [3.3744, 0.5151, -0.0000], [3.3977, 0.5151, -0.0000], [3.4445, 0.5385, -0.0000], [3.4914, 0.5385, -0.0000], [3.5382, 0.5385, -0.0000], [3.5851, 0.5385, -0.0000], [3.6085, 0.5385, -0.0000], [3.6553, 0.5385, -0.0000], [3.7021, 0.5151, -0.0000], [3.7489, 0.4916, -0.0000], [3.7723, 0.4916, -0.0000], [3.8192, 0.4682, -0.0000], [3.8426, 0.4448, -0.0000], [3.8895, 0.4215, -0.0000], [3.9129, 0.3981, -0.0000], [3.9363, 0.3512, -0.0000], [3.9830, 0.3278, -0.0000], [4.0064, 0.2810, -0.0000], [4.0299, 0.2575, -0.0000], [4.0299, 0.2107, -0.0000], [4.0533, 0.1638, -0.0000], [4.0533, 0.1405, -0.0000], [4.0767, 0.0937, -0.0000], [4.0767, 0.0468, -0.0000], [4.0767, 0.0000, 0.0000]],
                     k=[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0, 176.0, 177.0, 178.0],
                     d=1,
                     n="Options_ctrl",
                    )
                    
    return vis_ctrl, space_ctrl, options_ctrl



"""
=========================== Controls building ===========================

"""


@undo
def makeCtrls(shape_name):
    """
    Controller builder
    A selection is needed
    Creates a controller according to the shape. Match the rotation, position, and name of the selection

    :param: shape_name : the name of the function creating the shape
    :type shape_name : function
    """

    Ctrls = []
    sel = pm.selected()

    def NumCtrls(shape):
        pm.select(shape, add=True)

        ctrl = pm.selected()
        Ctrls.append(ctrl)
        num = len(sel)

        for each in range(0, num):
            addCtrl = pm.duplicate(ctrl)
            pm.select(addCtrl, r=True)
            Ctrls.append(addCtrl)

        for oSel, oCtrls in zip(sel, Ctrls):
            # print (oSel, oCtrls)
            pm.matchTransform(oCtrls, oSel,  rot=True, pos=True)
            pm.rename(oCtrls, '{}__{}'.format(NC.getNameNoSuffix(oSel), NC.CTRL))

    NumCtrls(shape_name())
    pm.select(Ctrls)
    pm.delete(Ctrls[-1])
    Ctrls.remove(Ctrls[-1])
    return Ctrls


sl = {
    "Xarrow_shape" : Xarrow_shape,
    "Yarrow_shape" : Yarrow_shape,
    "Zarrow_shape" : Zarrow_shape,
    "main_shape" : main_shape,
    "cube_shape" : cube_shape,
    "rectangle_shape" : rectangle_shape,
    "circleY_shape" : circleY_shape,
    "circleX_shape" : circleX_shape,
    "circleZ_shape" : circleZ_shape,
    "ball_shape" : ball_shape,
    "diamond_shape" : diamond_shape,
    "fleches_shape" : fleches_shape,
    "double_fleches_shape" : double_fleches_shape,
    "arc_fleches_shape" : arc_fleches_shape,
    "halfSpherePin_shape" : halfSpherePin_shape,
    "pinX_shape" : pinX_shape,
    "pinY_shape" : pinY_shape,
    "pinZ_shape" : pinZ_shape,
    "double_pin_shape" : double_pin_shape,
    "circleCross_shape" : circleCross_shape,
    "ball2_shape" : ball2_shape,
    "square_shape" : square_shape,
    "cog_shape" : cog_shape,
    "locator_shape" : locator_shape,
    "ik_shape" : ik_shape,
    "fk_shape" : fk_shape,
    "ik_fk_shape" : ik_fk_shape,
    "cylinder_shape" : cylinder_shape,
    "foot_shape" : foot_shape,
    "hips_shape" : hips_shape,
    "hips2_shape" : hips_shape,
    "chest_shape" : chest_shape,
    "VSO_shape" : VSO_shape,
}